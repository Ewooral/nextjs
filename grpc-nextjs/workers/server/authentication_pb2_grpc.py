# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import authentication_pb2 as authentication__pb2


class AuthManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterWorker = channel.unary_unary(
                '/workers_management_service.AuthManagementService/RegisterWorker',
                request_serializer=authentication__pb2.RegisterWorkerRequest.SerializeToString,
                response_deserializer=authentication__pb2.RegisterWorkerResponse.FromString,
                )
        self.LoginWorker = channel.unary_unary(
                '/workers_management_service.AuthManagementService/LoginWorker',
                request_serializer=authentication__pb2.LoginWorkerRequest.SerializeToString,
                response_deserializer=authentication__pb2.LoginWorkerResponse.FromString,
                )
        self.ForgotPassword = channel.unary_unary(
                '/workers_management_service.AuthManagementService/ForgotPassword',
                request_serializer=authentication__pb2.ForgotPasswordRequest.SerializeToString,
                response_deserializer=authentication__pb2.ForgotPasswordResponse.FromString,
                )
        self.VerifyOTP = channel.unary_unary(
                '/workers_management_service.AuthManagementService/VerifyOTP',
                request_serializer=authentication__pb2.VerifyOTPRequest.SerializeToString,
                response_deserializer=authentication__pb2.VerifyOTPResponse.FromString,
                )
        self.ResetPassword = channel.unary_unary(
                '/workers_management_service.AuthManagementService/ResetPassword',
                request_serializer=authentication__pb2.ResetPasswordRequest.SerializeToString,
                response_deserializer=authentication__pb2.ResetPasswordResponse.FromString,
                )


class AuthManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterWorker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginWorker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgotPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyOTP(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterWorker,
                    request_deserializer=authentication__pb2.RegisterWorkerRequest.FromString,
                    response_serializer=authentication__pb2.RegisterWorkerResponse.SerializeToString,
            ),
            'LoginWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginWorker,
                    request_deserializer=authentication__pb2.LoginWorkerRequest.FromString,
                    response_serializer=authentication__pb2.LoginWorkerResponse.SerializeToString,
            ),
            'ForgotPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgotPassword,
                    request_deserializer=authentication__pb2.ForgotPasswordRequest.FromString,
                    response_serializer=authentication__pb2.ForgotPasswordResponse.SerializeToString,
            ),
            'VerifyOTP': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyOTP,
                    request_deserializer=authentication__pb2.VerifyOTPRequest.FromString,
                    response_serializer=authentication__pb2.VerifyOTPResponse.SerializeToString,
            ),
            'ResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPassword,
                    request_deserializer=authentication__pb2.ResetPasswordRequest.FromString,
                    response_serializer=authentication__pb2.ResetPasswordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'workers_management_service.AuthManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/workers_management_service.AuthManagementService/RegisterWorker',
            authentication__pb2.RegisterWorkerRequest.SerializeToString,
            authentication__pb2.RegisterWorkerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoginWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/workers_management_service.AuthManagementService/LoginWorker',
            authentication__pb2.LoginWorkerRequest.SerializeToString,
            authentication__pb2.LoginWorkerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForgotPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/workers_management_service.AuthManagementService/ForgotPassword',
            authentication__pb2.ForgotPasswordRequest.SerializeToString,
            authentication__pb2.ForgotPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyOTP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/workers_management_service.AuthManagementService/VerifyOTP',
            authentication__pb2.VerifyOTPRequest.SerializeToString,
            authentication__pb2.VerifyOTPResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/workers_management_service.AuthManagementService/ResetPassword',
            authentication__pb2.ResetPasswordRequest.SerializeToString,
            authentication__pb2.ResetPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
