// source: Customer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.Customer.ApiAndAppversionRequestMessage', null, global);
goog.exportSymbol('proto.Customer.ApiAndAppversionResponseMessage', null, global);
goog.exportSymbol('proto.Customer.BizUserSearchRequestMessage', null, global);
goog.exportSymbol('proto.Customer.BizUserToApproveMessage', null, global);
goog.exportSymbol('proto.Customer.BusinessUserMessage', null, global);
goog.exportSymbol('proto.Customer.BusinessUserResponseListMessage', null, global);
goog.exportSymbol('proto.Customer.BusinessUserResponseMessage', null, global);
goog.exportSymbol('proto.Customer.CountryListMessage', null, global);
goog.exportSymbol('proto.Customer.CountryModel', null, global);
goog.exportSymbol('proto.Customer.CustomerAccountMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerOTForEmailRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerPINResetRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerPINResetRequestMessageOld', null, global);
goog.exportSymbol('proto.Customer.CustomerPasswordResetRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerResetPasswordRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerSecurityQuestion', null, global);
goog.exportSymbol('proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerSecurityQuestionsForUpdateMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerSecurityQuestionsList', null, global);
goog.exportSymbol('proto.Customer.CustomerTempOTRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerTempVerifyOTRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage', null, global);
goog.exportSymbol('proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage', null, global);
goog.exportSymbol('proto.Customer.EmptyMessage', null, global);
goog.exportSymbol('proto.Customer.LanguageOnlyMessage', null, global);
goog.exportSymbol('proto.Customer.LoginRequestMessage', null, global);
goog.exportSymbol('proto.Customer.LoginResponseMessage', null, global);
goog.exportSymbol('proto.Customer.OTRequestMessage', null, global);
goog.exportSymbol('proto.Customer.SuccessMessage', null, global);
goog.exportSymbol('proto.Customer.ValidateAnswerAndPasswordRequestMessage', null, global);
goog.exportSymbol('proto.Customer.ValidateAnswerAndPinRequestMessage', null, global);
goog.exportSymbol('proto.Customer.VerifyOTPRequestMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.EmptyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.EmptyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.EmptyMessage.displayName = 'proto.Customer.EmptyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.LanguageOnlyMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.LanguageOnlyMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.LanguageOnlyMessage.displayName = 'proto.Customer.LanguageOnlyMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerTempOTRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerTempOTRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerTempOTRequestMessage.displayName = 'proto.Customer.CustomerTempOTRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerTempVerifyOTRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerTempVerifyOTRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerTempVerifyOTRequestMessage.displayName = 'proto.Customer.CustomerTempVerifyOTRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.SuccessMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.SuccessMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.SuccessMessage.displayName = 'proto.Customer.SuccessMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerOTForEmailRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerOTForEmailRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerOTForEmailRequestMessage.displayName = 'proto.Customer.CustomerOTForEmailRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerAccountMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerAccountMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerAccountMessage.displayName = 'proto.Customer.CustomerAccountMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.LoginRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.LoginRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.LoginRequestMessage.displayName = 'proto.Customer.LoginRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.LoginResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.LoginResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.LoginResponseMessage.displayName = 'proto.Customer.LoginResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerPasswordResetRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerPasswordResetRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerPasswordResetRequestMessage.displayName = 'proto.Customer.CustomerPasswordResetRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerResetPasswordRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerResetPasswordRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerResetPasswordRequestMessage.displayName = 'proto.Customer.CustomerResetPasswordRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerPINResetRequestMessageOld = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerPINResetRequestMessageOld, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerPINResetRequestMessageOld.displayName = 'proto.Customer.CustomerPINResetRequestMessageOld';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerPINResetRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerPINResetRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerPINResetRequestMessage.displayName = 'proto.Customer.CustomerPINResetRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.OTRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.OTRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.OTRequestMessage.displayName = 'proto.Customer.OTRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.VerifyOTPRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.VerifyOTPRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.VerifyOTPRequestMessage.displayName = 'proto.Customer.VerifyOTPRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CountryModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CountryModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CountryModel.displayName = 'proto.Customer.CountryModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CountryListMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Customer.CountryListMessage.repeatedFields_, null);
};
goog.inherits(proto.Customer.CountryListMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CountryListMessage.displayName = 'proto.Customer.CountryListMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.BusinessUserMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.BusinessUserMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.BusinessUserMessage.displayName = 'proto.Customer.BusinessUserMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.BusinessUserResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.BusinessUserResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.BusinessUserResponseMessage.displayName = 'proto.Customer.BusinessUserResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.BusinessUserResponseListMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Customer.BusinessUserResponseListMessage.repeatedFields_, null);
};
goog.inherits(proto.Customer.BusinessUserResponseListMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.BusinessUserResponseListMessage.displayName = 'proto.Customer.BusinessUserResponseListMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.BizUserToApproveMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.BizUserToApproveMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.BizUserToApproveMessage.displayName = 'proto.Customer.BizUserToApproveMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.BizUserSearchRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.BizUserSearchRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.BizUserSearchRequestMessage.displayName = 'proto.Customer.BizUserSearchRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerSecurityQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerSecurityQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerSecurityQuestion.displayName = 'proto.Customer.CustomerSecurityQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerSecurityQuestionsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Customer.CustomerSecurityQuestionsList.repeatedFields_, null);
};
goog.inherits(proto.Customer.CustomerSecurityQuestionsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerSecurityQuestionsList.displayName = 'proto.Customer.CustomerSecurityQuestionsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerSecurityQuestionsForUpdateMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerSecurityQuestionsForUpdateMessage.displayName = 'proto.Customer.CustomerSecurityQuestionsForUpdateMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.displayName = 'proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.displayName = 'proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.displayName = 'proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.ValidateAnswerAndPinRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.ValidateAnswerAndPinRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.ValidateAnswerAndPinRequestMessage.displayName = 'proto.Customer.ValidateAnswerAndPinRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.ValidateAnswerAndPasswordRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.ValidateAnswerAndPasswordRequestMessage.displayName = 'proto.Customer.ValidateAnswerAndPasswordRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.ApiAndAppversionRequestMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.ApiAndAppversionRequestMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.ApiAndAppversionRequestMessage.displayName = 'proto.Customer.ApiAndAppversionRequestMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Customer.ApiAndAppversionResponseMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Customer.ApiAndAppversionResponseMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Customer.ApiAndAppversionResponseMessage.displayName = 'proto.Customer.ApiAndAppversionResponseMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.EmptyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.EmptyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.EmptyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.EmptyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.EmptyMessage}
 */
proto.Customer.EmptyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.EmptyMessage;
  return proto.Customer.EmptyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.EmptyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.EmptyMessage}
 */
proto.Customer.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.EmptyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.EmptyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.EmptyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.EmptyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.LanguageOnlyMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.LanguageOnlyMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.LanguageOnlyMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.LanguageOnlyMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    languageid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.LanguageOnlyMessage}
 */
proto.Customer.LanguageOnlyMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.LanguageOnlyMessage;
  return proto.Customer.LanguageOnlyMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.LanguageOnlyMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.LanguageOnlyMessage}
 */
proto.Customer.LanguageOnlyMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.LanguageOnlyMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.LanguageOnlyMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.LanguageOnlyMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.LanguageOnlyMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string languageId = 4;
 * @return {string}
 */
proto.Customer.LanguageOnlyMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LanguageOnlyMessage} returns this
 */
proto.Customer.LanguageOnlyMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerTempOTRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerTempOTRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerTempOTRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerTempOTRequestMessage}
 */
proto.Customer.CustomerTempOTRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerTempOTRequestMessage;
  return proto.Customer.CustomerTempOTRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerTempOTRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerTempOTRequestMessage}
 */
proto.Customer.CustomerTempOTRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerTempOTRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerTempOTRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerTempOTRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string mobileNumber = 1;
 * @return {string}
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempOTRequestMessage} returns this
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailAddress = 2;
 * @return {string}
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempOTRequestMessage} returns this
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 personalBusinessGroupValue = 3;
 * @return {number}
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerTempOTRequestMessage} returns this
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string countryCode = 5;
 * @return {string}
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempOTRequestMessage} returns this
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempOTRequestMessage} returns this
 */
proto.Customer.CustomerTempOTRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerTempVerifyOTRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerTempVerifyOTRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    otpvalue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 4, 0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerTempVerifyOTRequestMessage;
  return proto.Customer.CustomerTempVerifyOTRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerTempVerifyOTRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpvalue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerTempVerifyOTRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerTempVerifyOTRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOtpvalue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string mobileNumber = 1;
 * @return {string}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage} returns this
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailAddress = 2;
 * @return {string}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage} returns this
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string otpvalue = 3;
 * @return {string}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.getOtpvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage} returns this
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.setOtpvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 personalBusinessGroupValue = 4;
 * @return {number}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage} returns this
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string countryCode = 5;
 * @return {string}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage} returns this
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerTempVerifyOTRequestMessage} returns this
 */
proto.Customer.CustomerTempVerifyOTRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.SuccessMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.SuccessMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.SuccessMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.SuccessMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    registrationerrorcode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.SuccessMessage}
 */
proto.Customer.SuccessMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.SuccessMessage;
  return proto.Customer.SuccessMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.SuccessMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.SuccessMessage}
 */
proto.Customer.SuccessMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistrationerrorcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.SuccessMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.SuccessMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.SuccessMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.SuccessMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegistrationerrorcode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.Customer.SuccessMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Customer.SuccessMessage} returns this
 */
proto.Customer.SuccessMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.Customer.SuccessMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.SuccessMessage} returns this
 */
proto.Customer.SuccessMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.Customer.SuccessMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.SuccessMessage} returns this
 */
proto.Customer.SuccessMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string registrationErrorCode = 4;
 * @return {string}
 */
proto.Customer.SuccessMessage.prototype.getRegistrationerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.SuccessMessage} returns this
 */
proto.Customer.SuccessMessage.prototype.setRegistrationerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerOTForEmailRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerOTForEmailRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerOTForEmailRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobilenumberoremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerOTForEmailRequestMessage}
 */
proto.Customer.CustomerOTForEmailRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerOTForEmailRequestMessage;
  return proto.Customer.CustomerOTForEmailRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerOTForEmailRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerOTForEmailRequestMessage}
 */
proto.Customer.CustomerOTForEmailRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumberoremail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerOTForEmailRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerOTForEmailRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerOTForEmailRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobilenumberoremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string mobileNumberOrEmail = 1;
 * @return {string}
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.getMobilenumberoremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerOTForEmailRequestMessage} returns this
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.setMobilenumberoremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string countryCode = 5;
 * @return {string}
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerOTForEmailRequestMessage} returns this
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerOTForEmailRequestMessage} returns this
 */
proto.Customer.CustomerOTForEmailRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerAccountMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerAccountMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerAccountMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerAccountMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 6, 0),
    businessname: jspb.Message.getFieldWithDefault(msg, 7, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    mobileorweb: jspb.Message.getFieldWithDefault(msg, 9, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 10, ""),
    customersixdigitpin: jspb.Message.getFieldWithDefault(msg, 22, ""),
    countrycodeforfirsteganowwallet: jspb.Message.getFieldWithDefault(msg, 23, ""),
    otpvalue: jspb.Message.getFieldWithDefault(msg, 24, ""),
    businesscontactpersonmobilenumber: jspb.Message.getFieldWithDefault(msg, 25, ""),
    mobilenodialcode: jspb.Message.getFieldWithDefault(msg, 26, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerAccountMessage}
 */
proto.Customer.CustomerAccountMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerAccountMessage;
  return proto.Customer.CustomerAccountMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerAccountMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerAccountMessage}
 */
proto.Customer.CustomerAccountMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessname(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileorweb(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomersixdigitpin(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycodeforfirsteganowwallet(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpvalue(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesscontactpersonmobilenumber(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenodialcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerAccountMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerAccountMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerAccountMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerAccountMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBusinessname();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMobileorweb();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCustomersixdigitpin();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getCountrycodeforfirsteganowwallet();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getOtpvalue();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getBusinesscontactpersonmobilenumber();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getMobilenodialcode();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
};


/**
 * optional string mobileNumber = 1;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailAddress = 2;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string firstName = 3;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string lastName = 4;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 PersonalBusinessGroupValue = 6;
 * @return {number}
 */
proto.Customer.CustomerAccountMessage.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string BusinessName = 7;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getBusinessname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setBusinessname = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string countryCode = 8;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string mobileOrWeb = 9;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getMobileorweb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setMobileorweb = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string languageId = 10;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string customerSixDigitPIN = 22;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getCustomersixdigitpin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setCustomersixdigitpin = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string countryCodeForFirstEganowWallet = 23;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getCountrycodeforfirsteganowwallet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setCountrycodeforfirsteganowwallet = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string otpvalue = 24;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getOtpvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setOtpvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string businessContactPersonMobileNumber = 25;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getBusinesscontactpersonmobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setBusinesscontactpersonmobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string mobileNoDialCode = 26;
 * @return {string}
 */
proto.Customer.CustomerAccountMessage.prototype.getMobilenodialcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerAccountMessage} returns this
 */
proto.Customer.CustomerAccountMessage.prototype.setMobilenodialcode = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.LoginRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.LoginRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.LoginRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.LoginRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    passwordorpin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mobileorweb: jspb.Message.getFieldWithDefault(msg, 4, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 5, ""),
    password1orpin2orhpin3option: jspb.Message.getFieldWithDefault(msg, 6, 0),
    apiversionno: jspb.Message.getFieldWithDefault(msg, 20, 0),
    apiversionnoforapp: jspb.Message.getFieldWithDefault(msg, 21, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.LoginRequestMessage}
 */
proto.Customer.LoginRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.LoginRequestMessage;
  return proto.Customer.LoginRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.LoginRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.LoginRequestMessage}
 */
proto.Customer.LoginRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasswordorpin(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobileorweb(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPassword1orpin2orhpin3option(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApiversionno(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiversionnoforapp(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.LoginRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.LoginRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.LoginRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.LoginRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPasswordorpin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMobileorweb();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPassword1orpin2orhpin3option();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getApiversionno();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getApiversionnoforapp();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.LoginRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string passwordOrPin = 2;
 * @return {string}
 */
proto.Customer.LoginRequestMessage.prototype.getPasswordorpin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setPasswordorpin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 personalBusinessGroupValue = 3;
 * @return {number}
 */
proto.Customer.LoginRequestMessage.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string mobileOrWeb = 4;
 * @return {string}
 */
proto.Customer.LoginRequestMessage.prototype.getMobileorweb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setMobileorweb = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string countryCode = 5;
 * @return {string}
 */
proto.Customer.LoginRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 password1OrPin2OrHPin3Option = 6;
 * @return {number}
 */
proto.Customer.LoginRequestMessage.prototype.getPassword1orpin2orhpin3option = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setPassword1orpin2orhpin3option = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 apiVersionNo = 20;
 * @return {number}
 */
proto.Customer.LoginRequestMessage.prototype.getApiversionno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setApiversionno = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string apiVersionNoForApp = 21;
 * @return {string}
 */
proto.Customer.LoginRequestMessage.prototype.getApiversionnoforapp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setApiversionnoforapp = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Customer.LoginRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginRequestMessage} returns this
 */
proto.Customer.LoginRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.LoginResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.LoginResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.LoginResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.LoginResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    messagesuccessfulorfailed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    message: jspb.Message.getFieldWithDefault(msg, 3, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    personalbusinessgroup: jspb.Message.getFieldWithDefault(msg, 7, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 8, 0),
    firstname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lastname: jspb.Message.getFieldWithDefault(msg, 10, ""),
    businessname: jspb.Message.getFieldWithDefault(msg, 12, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 14, ""),
    operatingcountryyesno: jspb.Message.getFieldWithDefault(msg, 15, ""),
    customerprofilepicimageurl: jspb.Message.getFieldWithDefault(msg, 16, ""),
    userjwttoken: jspb.Message.getFieldWithDefault(msg, 50, ""),
    loginerrorcode: jspb.Message.getFieldWithDefault(msg, 51, ""),
    kycdataenc: jspb.Message.getFieldWithDefault(msg, 52, ""),
    appupdaterequirementstatus: jspb.Message.getFieldWithDefault(msg, 53, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.LoginResponseMessage}
 */
proto.Customer.LoginResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.LoginResponseMessage;
  return proto.Customer.LoginResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.LoginResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.LoginResponseMessage}
 */
proto.Customer.LoginResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagesuccessfulorfailed(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalbusinessgroup(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastname(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessname(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingcountryyesno(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerprofilepicimageurl(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserjwttoken(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginerrorcode(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setKycdataenc(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppupdaterequirementstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.LoginResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.LoginResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.LoginResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.LoginResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessagesuccessfulorfailed();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPersonalbusinessgroup();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLastname();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBusinessname();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getOperatingcountryyesno();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCustomerprofilepicimageurl();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getUserjwttoken();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getLoginerrorcode();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getKycdataenc();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getAppupdaterequirementstatus();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.Customer.LoginResponseMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string messageSuccessfulOrFailed = 2;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getMessagesuccessfulorfailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setMessagesuccessfulorfailed = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string message = 3;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string customerId = 4;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string mobileNumber = 5;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string emailAddress = 6;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string personalBusinessGroup = 7;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getPersonalbusinessgroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setPersonalbusinessgroup = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 personalBusinessGroupValue = 8;
 * @return {number}
 */
proto.Customer.LoginResponseMessage.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string firstName = 9;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string lastName = 10;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getLastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setLastname = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string businessName = 12;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getBusinessname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setBusinessname = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string countryCode = 13;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string languageId = 14;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string OperatingCountryYesNo = 15;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getOperatingcountryyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setOperatingcountryyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string customerProfilePicImageUrl = 16;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getCustomerprofilepicimageurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setCustomerprofilepicimageurl = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string userJwtToken = 50;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getUserjwttoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setUserjwttoken = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string loginErrorCode = 51;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getLoginerrorcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setLoginerrorcode = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string kycDataEnc = 52;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getKycdataenc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setKycdataenc = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * optional string appUpdateRequirementStatus = 53;
 * @return {string}
 */
proto.Customer.LoginResponseMessage.prototype.getAppupdaterequirementstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.LoginResponseMessage} returns this
 */
proto.Customer.LoginResponseMessage.prototype.setAppupdaterequirementstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 53, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerPasswordResetRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerPasswordResetRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerPasswordResetRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 4, 0),
    otpvalue: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage}
 */
proto.Customer.CustomerPasswordResetRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerPasswordResetRequestMessage;
  return proto.Customer.CustomerPasswordResetRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerPasswordResetRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage}
 */
proto.Customer.CustomerPasswordResetRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpvalue(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerPasswordResetRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerPasswordResetRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerPasswordResetRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOtpvalue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage} returns this
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage} returns this
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string languageId = 3;
 * @return {string}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage} returns this
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 personalBusinessGroupValue = 4;
 * @return {number}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage} returns this
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string otpvalue = 5;
 * @return {string}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.getOtpvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage} returns this
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.setOtpvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPasswordResetRequestMessage} returns this
 */
proto.Customer.CustomerPasswordResetRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerResetPasswordRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerResetPasswordRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerResetPasswordRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    securityquestionnumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    securityanswer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    usersixdigitpin: jspb.Message.getFieldWithDefault(msg, 4, 0),
    newpassword: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage}
 */
proto.Customer.CustomerResetPasswordRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerResetPasswordRequestMessage;
  return proto.Customer.CustomerResetPasswordRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerResetPasswordRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage}
 */
proto.Customer.CustomerResetPasswordRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSecurityquestionnumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityanswer(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUsersixdigitpin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewpassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerResetPasswordRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerResetPasswordRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerResetPasswordRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecurityquestionnumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSecurityanswer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsersixdigitpin();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getNewpassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage} returns this
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 securityQuestionNumber = 2;
 * @return {number}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.getSecurityquestionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage} returns this
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.setSecurityquestionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string securityAnswer = 3;
 * @return {string}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.getSecurityanswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage} returns this
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.setSecurityanswer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 userSixDigitPin = 4;
 * @return {number}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.getUsersixdigitpin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage} returns this
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.setUsersixdigitpin = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string newPassword = 5;
 * @return {string}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.getNewpassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage} returns this
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.setNewpassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage} returns this
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerResetPasswordRequestMessage} returns this
 */
proto.Customer.CustomerResetPasswordRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerPINResetRequestMessageOld.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerPINResetRequestMessageOld} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerPINResetRequestMessageOld.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pin: jspb.Message.getFieldWithDefault(msg, 2, 0),
    languageid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    personalbusinessgroupvalue: jspb.Message.getFieldWithDefault(msg, 4, 0),
    otpvalue: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld}
 */
proto.Customer.CustomerPINResetRequestMessageOld.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerPINResetRequestMessageOld;
  return proto.Customer.CustomerPINResetRequestMessageOld.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerPINResetRequestMessageOld} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld}
 */
proto.Customer.CustomerPINResetRequestMessageOld.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessgroupvalue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpvalue(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerPINResetRequestMessageOld.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerPINResetRequestMessageOld} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerPINResetRequestMessageOld.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPin();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPersonalbusinessgroupvalue();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOtpvalue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld} returns this
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 pin = 2;
 * @return {number}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.getPin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld} returns this
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.setPin = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string languageId = 3;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld} returns this
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 personalBusinessGroupValue = 4;
 * @return {number}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.getPersonalbusinessgroupvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld} returns this
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.setPersonalbusinessgroupvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string otpvalue = 5;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.getOtpvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld} returns this
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.setOtpvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessageOld} returns this
 */
proto.Customer.CustomerPINResetRequestMessageOld.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerPINResetRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerPINResetRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerPINResetRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    securityquestionnumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    securityanswer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    newusersixdigitpin: jspb.Message.getFieldWithDefault(msg, 4, 0),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerPINResetRequestMessage}
 */
proto.Customer.CustomerPINResetRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerPINResetRequestMessage;
  return proto.Customer.CustomerPINResetRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerPINResetRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerPINResetRequestMessage}
 */
proto.Customer.CustomerPINResetRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSecurityquestionnumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityanswer(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNewusersixdigitpin(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerPINResetRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerPINResetRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerPINResetRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSecurityquestionnumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSecurityanswer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNewusersixdigitpin();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessage} returns this
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 securityQuestionNumber = 2;
 * @return {number}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.getSecurityquestionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerPINResetRequestMessage} returns this
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.setSecurityquestionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string securityAnswer = 3;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.getSecurityanswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessage} returns this
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.setSecurityanswer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 newUserSixDigitPin = 4;
 * @return {number}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.getNewusersixdigitpin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerPINResetRequestMessage} returns this
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.setNewusersixdigitpin = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessage} returns this
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessage} returns this
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerPINResetRequestMessage} returns this
 */
proto.Customer.CustomerPINResetRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.OTRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.OTRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.OTRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.OTRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customermobilenooremail: jspb.Message.getFieldWithDefault(msg, 1, ""),
    personalbusinessvalue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.OTRequestMessage}
 */
proto.Customer.OTRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.OTRequestMessage;
  return proto.Customer.OTRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.OTRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.OTRequestMessage}
 */
proto.Customer.OTRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomermobilenooremail(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessvalue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.OTRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.OTRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.OTRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.OTRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomermobilenooremail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPersonalbusinessvalue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string customerMobileNoOrEmail = 1;
 * @return {string}
 */
proto.Customer.OTRequestMessage.prototype.getCustomermobilenooremail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.OTRequestMessage} returns this
 */
proto.Customer.OTRequestMessage.prototype.setCustomermobilenooremail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 personalBusinessValue = 2;
 * @return {number}
 */
proto.Customer.OTRequestMessage.prototype.getPersonalbusinessvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.OTRequestMessage} returns this
 */
proto.Customer.OTRequestMessage.prototype.setPersonalbusinessvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string countryCode = 3;
 * @return {string}
 */
proto.Customer.OTRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.OTRequestMessage} returns this
 */
proto.Customer.OTRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Customer.OTRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.OTRequestMessage} returns this
 */
proto.Customer.OTRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.VerifyOTPRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.VerifyOTPRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.VerifyOTPRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.VerifyOTPRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    otpvalue: jspb.Message.getFieldWithDefault(msg, 2, ""),
    personalbusinessvalue: jspb.Message.getFieldWithDefault(msg, 3, 0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.VerifyOTPRequestMessage}
 */
proto.Customer.VerifyOTPRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.VerifyOTPRequestMessage;
  return proto.Customer.VerifyOTPRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.VerifyOTPRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.VerifyOTPRequestMessage}
 */
proto.Customer.VerifyOTPRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOtpvalue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPersonalbusinessvalue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.VerifyOTPRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.VerifyOTPRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.VerifyOTPRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.VerifyOTPRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOtpvalue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPersonalbusinessvalue();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.VerifyOTPRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.VerifyOTPRequestMessage} returns this
 */
proto.Customer.VerifyOTPRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string otpvalue = 2;
 * @return {string}
 */
proto.Customer.VerifyOTPRequestMessage.prototype.getOtpvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.VerifyOTPRequestMessage} returns this
 */
proto.Customer.VerifyOTPRequestMessage.prototype.setOtpvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 personalBusinessValue = 3;
 * @return {number}
 */
proto.Customer.VerifyOTPRequestMessage.prototype.getPersonalbusinessvalue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.VerifyOTPRequestMessage} returns this
 */
proto.Customer.VerifyOTPRequestMessage.prototype.setPersonalbusinessvalue = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string countryCode = 4;
 * @return {string}
 */
proto.Customer.VerifyOTPRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.VerifyOTPRequestMessage} returns this
 */
proto.Customer.VerifyOTPRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Customer.VerifyOTPRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.VerifyOTPRequestMessage} returns this
 */
proto.Customer.VerifyOTPRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CountryModel.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CountryModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CountryModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CountryModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrydialcode: jspb.Message.getFieldWithDefault(msg, 2, 0),
    countryname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    currencyiso: jspb.Message.getFieldWithDefault(msg, 4, ""),
    countryflagurl: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CountryModel}
 */
proto.Customer.CountryModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CountryModel;
  return proto.Customer.CountryModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CountryModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CountryModel}
 */
proto.Customer.CountryModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCountrydialcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencyiso(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountryflagurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CountryModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CountryModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CountryModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CountryModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrydialcode();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCountryname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrencyiso();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCountryflagurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.Customer.CountryModel.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CountryModel} returns this
 */
proto.Customer.CountryModel.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 countryDialCode = 2;
 * @return {number}
 */
proto.Customer.CountryModel.prototype.getCountrydialcode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CountryModel} returns this
 */
proto.Customer.CountryModel.prototype.setCountrydialcode = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string countryName = 3;
 * @return {string}
 */
proto.Customer.CountryModel.prototype.getCountryname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CountryModel} returns this
 */
proto.Customer.CountryModel.prototype.setCountryname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string currencyISO = 4;
 * @return {string}
 */
proto.Customer.CountryModel.prototype.getCurrencyiso = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CountryModel} returns this
 */
proto.Customer.CountryModel.prototype.setCurrencyiso = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string countryFlagUrl = 5;
 * @return {string}
 */
proto.Customer.CountryModel.prototype.getCountryflagurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CountryModel} returns this
 */
proto.Customer.CountryModel.prototype.setCountryflagurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Customer.CountryListMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CountryListMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CountryListMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CountryListMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CountryListMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrylistList: jspb.Message.toObjectList(msg.getCountrylistList(),
    proto.Customer.CountryModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CountryListMessage}
 */
proto.Customer.CountryListMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CountryListMessage;
  return proto.Customer.CountryListMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CountryListMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CountryListMessage}
 */
proto.Customer.CountryListMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Customer.CountryModel;
      reader.readMessage(value,proto.Customer.CountryModel.deserializeBinaryFromReader);
      msg.addCountrylist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CountryListMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CountryListMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CountryListMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CountryListMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrylistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Customer.CountryModel.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CountryModel countrylist = 1;
 * @return {!Array<!proto.Customer.CountryModel>}
 */
proto.Customer.CountryListMessage.prototype.getCountrylistList = function() {
  return /** @type{!Array<!proto.Customer.CountryModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Customer.CountryModel, 1));
};


/**
 * @param {!Array<!proto.Customer.CountryModel>} value
 * @return {!proto.Customer.CountryListMessage} returns this
*/
proto.Customer.CountryListMessage.prototype.setCountrylistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Customer.CountryModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Customer.CountryModel}
 */
proto.Customer.CountryListMessage.prototype.addCountrylist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Customer.CountryModel, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Customer.CountryListMessage} returns this
 */
proto.Customer.CountryListMessage.prototype.clearCountrylistList = function() {
  return this.setCountrylistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.BusinessUserMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.BusinessUserMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.BusinessUserMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BusinessUserMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    surnamelastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    postinglimitamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    authlimitamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    caninitiatetransyesno: jspb.Message.getFieldWithDefault(msg, 8, ""),
    canauthorizetransyesno: jspb.Message.getFieldWithDefault(msg, 9, ""),
    caninitiatecustomerservice: jspb.Message.getFieldWithDefault(msg, 10, ""),
    canauthorizecustomerservice: jspb.Message.getFieldWithDefault(msg, 11, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.BusinessUserMessage}
 */
proto.Customer.BusinessUserMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.BusinessUserMessage;
  return proto.Customer.BusinessUserMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.BusinessUserMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.BusinessUserMessage}
 */
proto.Customer.BusinessUserMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurnamelastname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPostinglimitamount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAuthlimitamount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaninitiatetransyesno(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanauthorizetransyesno(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaninitiatecustomerservice(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanauthorizecustomerservice(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.BusinessUserMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.BusinessUserMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.BusinessUserMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BusinessUserMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSurnamelastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPostinglimitamount();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getAuthlimitamount();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getCaninitiatetransyesno();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCanauthorizetransyesno();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCaninitiatecustomerservice();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCanauthorizecustomerservice();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mobileNumber = 2;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string surnameLastname = 3;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getSurnamelastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setSurnamelastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string firstName = 4;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double postingLimitAmount = 6;
 * @return {number}
 */
proto.Customer.BusinessUserMessage.prototype.getPostinglimitamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setPostinglimitamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double authLimitAmount = 7;
 * @return {number}
 */
proto.Customer.BusinessUserMessage.prototype.getAuthlimitamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setAuthlimitamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string canInitiateTransYesNo = 8;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getCaninitiatetransyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setCaninitiatetransyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string canAuthorizeTransYesNo = 9;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getCanauthorizetransyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setCanauthorizetransyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string canInitiateCustomerService = 10;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getCaninitiatecustomerservice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setCaninitiatecustomerservice = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string canAuthorizeCustomerService = 11;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getCanauthorizecustomerservice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setCanauthorizecustomerservice = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.BusinessUserMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserMessage} returns this
 */
proto.Customer.BusinessUserMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.BusinessUserResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.BusinessUserResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.BusinessUserResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BusinessUserResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    surnamelastname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    postinglimitamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    authlimitamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    caninitiatetransyesno: jspb.Message.getFieldWithDefault(msg, 8, ""),
    canauthorizetransyesno: jspb.Message.getFieldWithDefault(msg, 9, ""),
    userstatus: jspb.Message.getFieldWithDefault(msg, 11, ""),
    makeid: jspb.Message.getFieldWithDefault(msg, 12, ""),
    authid: jspb.Message.getFieldWithDefault(msg, 13, ""),
    makedate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    authdate: jspb.Message.getFieldWithDefault(msg, 15, ""),
    caninitiatecustomerservice: jspb.Message.getFieldWithDefault(msg, 16, ""),
    canauthorizecustomerservice: jspb.Message.getFieldWithDefault(msg, 17, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.BusinessUserResponseMessage}
 */
proto.Customer.BusinessUserResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.BusinessUserResponseMessage;
  return proto.Customer.BusinessUserResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.BusinessUserResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.BusinessUserResponseMessage}
 */
proto.Customer.BusinessUserResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurnamelastname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPostinglimitamount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAuthlimitamount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaninitiatetransyesno(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanauthorizetransyesno(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserstatus(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakeid(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthid(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMakedate(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthdate(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaninitiatecustomerservice(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanauthorizecustomerservice(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.BusinessUserResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.BusinessUserResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.BusinessUserResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BusinessUserResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSurnamelastname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPostinglimitamount();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getAuthlimitamount();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getCaninitiatetransyesno();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCanauthorizetransyesno();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getUserstatus();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getMakeid();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAuthid();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMakedate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAuthdate();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCaninitiatecustomerservice();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCanauthorizecustomerservice();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string mobileNumber = 2;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string surnameLastname = 3;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getSurnamelastname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setSurnamelastname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string firstName = 4;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double postingLimitAmount = 6;
 * @return {number}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getPostinglimitamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setPostinglimitamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double authLimitAmount = 7;
 * @return {number}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getAuthlimitamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setAuthlimitamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string canInitiateTransYesNo = 8;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getCaninitiatetransyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setCaninitiatetransyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string canAuthorizeTransYesNo = 9;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getCanauthorizetransyesno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setCanauthorizetransyesno = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string UserStatus = 11;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getUserstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setUserstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string MakeId = 12;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getMakeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setMakeid = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string AuthId = 13;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getAuthid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setAuthid = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string MakeDate = 14;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getMakedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setMakedate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string AuthDate = 15;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getAuthdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setAuthdate = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string canInitiateCustomerService = 16;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getCaninitiatecustomerservice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setCaninitiatecustomerservice = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string canAuthorizeCustomerService = 17;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getCanauthorizecustomerservice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setCanauthorizecustomerservice = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.BusinessUserResponseMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BusinessUserResponseMessage} returns this
 */
proto.Customer.BusinessUserResponseMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Customer.BusinessUserResponseListMessage.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.BusinessUserResponseListMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.BusinessUserResponseListMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.BusinessUserResponseListMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BusinessUserResponseListMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    userlistList: jspb.Message.toObjectList(msg.getUserlistList(),
    proto.Customer.BusinessUserResponseMessage.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.BusinessUserResponseListMessage}
 */
proto.Customer.BusinessUserResponseListMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.BusinessUserResponseListMessage;
  return proto.Customer.BusinessUserResponseListMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.BusinessUserResponseListMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.BusinessUserResponseListMessage}
 */
proto.Customer.BusinessUserResponseListMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Customer.BusinessUserResponseMessage;
      reader.readMessage(value,proto.Customer.BusinessUserResponseMessage.deserializeBinaryFromReader);
      msg.addUserlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.BusinessUserResponseListMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.BusinessUserResponseListMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.BusinessUserResponseListMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BusinessUserResponseListMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Customer.BusinessUserResponseMessage.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BusinessUserResponseMessage userlist = 1;
 * @return {!Array<!proto.Customer.BusinessUserResponseMessage>}
 */
proto.Customer.BusinessUserResponseListMessage.prototype.getUserlistList = function() {
  return /** @type{!Array<!proto.Customer.BusinessUserResponseMessage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Customer.BusinessUserResponseMessage, 1));
};


/**
 * @param {!Array<!proto.Customer.BusinessUserResponseMessage>} value
 * @return {!proto.Customer.BusinessUserResponseListMessage} returns this
*/
proto.Customer.BusinessUserResponseListMessage.prototype.setUserlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Customer.BusinessUserResponseMessage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Customer.BusinessUserResponseMessage}
 */
proto.Customer.BusinessUserResponseListMessage.prototype.addUserlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Customer.BusinessUserResponseMessage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Customer.BusinessUserResponseListMessage} returns this
 */
proto.Customer.BusinessUserResponseListMessage.prototype.clearUserlistList = function() {
  return this.setUserlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.BizUserToApproveMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.BizUserToApproveMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.BizUserToApproveMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BizUserToApproveMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.BizUserToApproveMessage}
 */
proto.Customer.BizUserToApproveMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.BizUserToApproveMessage;
  return proto.Customer.BizUserToApproveMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.BizUserToApproveMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.BizUserToApproveMessage}
 */
proto.Customer.BizUserToApproveMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstname(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.BizUserToApproveMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.BizUserToApproveMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.BizUserToApproveMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BizUserToApproveMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.BizUserToApproveMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BizUserToApproveMessage} returns this
 */
proto.Customer.BizUserToApproveMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string firstName = 2;
 * @return {string}
 */
proto.Customer.BizUserToApproveMessage.prototype.getFirstname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BizUserToApproveMessage} returns this
 */
proto.Customer.BizUserToApproveMessage.prototype.setFirstname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.BizUserToApproveMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BizUserToApproveMessage} returns this
 */
proto.Customer.BizUserToApproveMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.BizUserSearchRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.BizUserSearchRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.BizUserSearchRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BizUserSearchRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    userstatus: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.BizUserSearchRequestMessage}
 */
proto.Customer.BizUserSearchRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.BizUserSearchRequestMessage;
  return proto.Customer.BizUserSearchRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.BizUserSearchRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.BizUserSearchRequestMessage}
 */
proto.Customer.BizUserSearchRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserstatus(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.BizUserSearchRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.BizUserSearchRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.BizUserSearchRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.BizUserSearchRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserstatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string userStatus = 1;
 * @return {string}
 */
proto.Customer.BizUserSearchRequestMessage.prototype.getUserstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BizUserSearchRequestMessage} returns this
 */
proto.Customer.BizUserSearchRequestMessage.prototype.setUserstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.BizUserSearchRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.BizUserSearchRequestMessage} returns this
 */
proto.Customer.BizUserSearchRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerSecurityQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerSecurityQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerSecurityQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    questionid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    securityquestion: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerSecurityQuestion}
 */
proto.Customer.CustomerSecurityQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerSecurityQuestion;
  return proto.Customer.CustomerSecurityQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerSecurityQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerSecurityQuestion}
 */
proto.Customer.CustomerSecurityQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuestionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityquestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerSecurityQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerSecurityQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerSecurityQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionid();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSecurityquestion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 questionId = 1;
 * @return {number}
 */
proto.Customer.CustomerSecurityQuestion.prototype.getQuestionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerSecurityQuestion} returns this
 */
proto.Customer.CustomerSecurityQuestion.prototype.setQuestionid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string securityQuestion = 2;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestion.prototype.getSecurityquestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestion} returns this
 */
proto.Customer.CustomerSecurityQuestion.prototype.setSecurityquestion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Customer.CustomerSecurityQuestionsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerSecurityQuestionsList.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerSecurityQuestionsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerSecurityQuestionsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestionsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    securityquestionslistList: jspb.Message.toObjectList(msg.getSecurityquestionslistList(),
    proto.Customer.CustomerSecurityQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerSecurityQuestionsList}
 */
proto.Customer.CustomerSecurityQuestionsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerSecurityQuestionsList;
  return proto.Customer.CustomerSecurityQuestionsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerSecurityQuestionsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerSecurityQuestionsList}
 */
proto.Customer.CustomerSecurityQuestionsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Customer.CustomerSecurityQuestion;
      reader.readMessage(value,proto.Customer.CustomerSecurityQuestion.deserializeBinaryFromReader);
      msg.addSecurityquestionslist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerSecurityQuestionsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerSecurityQuestionsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerSecurityQuestionsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestionsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurityquestionslistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Customer.CustomerSecurityQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomerSecurityQuestion securityQuestionsList = 1;
 * @return {!Array<!proto.Customer.CustomerSecurityQuestion>}
 */
proto.Customer.CustomerSecurityQuestionsList.prototype.getSecurityquestionslistList = function() {
  return /** @type{!Array<!proto.Customer.CustomerSecurityQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Customer.CustomerSecurityQuestion, 1));
};


/**
 * @param {!Array<!proto.Customer.CustomerSecurityQuestion>} value
 * @return {!proto.Customer.CustomerSecurityQuestionsList} returns this
*/
proto.Customer.CustomerSecurityQuestionsList.prototype.setSecurityquestionslistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Customer.CustomerSecurityQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Customer.CustomerSecurityQuestion}
 */
proto.Customer.CustomerSecurityQuestionsList.prototype.addSecurityquestionslist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Customer.CustomerSecurityQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Customer.CustomerSecurityQuestionsList} returns this
 */
proto.Customer.CustomerSecurityQuestionsList.prototype.clearSecurityquestionslistList = function() {
  return this.setSecurityquestionslistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerSecurityQuestionsForUpdateMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    securityquestionone: jspb.Message.getFieldWithDefault(msg, 30, ""),
    securityanswerone: jspb.Message.getFieldWithDefault(msg, 31, ""),
    securityquestiontwo: jspb.Message.getFieldWithDefault(msg, 32, ""),
    securityanswertwo: jspb.Message.getFieldWithDefault(msg, 33, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerSecurityQuestionsForUpdateMessage;
  return proto.Customer.CustomerSecurityQuestionsForUpdateMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityquestionone(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityanswerone(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityquestiontwo(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityanswertwo(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerSecurityQuestionsForUpdateMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurityquestionone();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getSecurityanswerone();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getSecurityquestiontwo();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getSecurityanswertwo();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string securityQuestionOne = 30;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.getSecurityquestionone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.setSecurityquestionone = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string securityAnswerOne = 31;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.getSecurityanswerone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.setSecurityanswerone = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string securityQuestionTwo = 32;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.getSecurityquestiontwo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.setSecurityquestiontwo = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string securityAnswerTwo = 33;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.getSecurityanswertwo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.setSecurityanswertwo = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionsForUpdateMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionsForUpdateMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage;
  return proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 5;
 * @return {string}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage} returns this
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage} returns this
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage} returns this
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    securityquestionnumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    securityquestion: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage;
  return proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSecurityquestionnumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityquestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecurityquestionnumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSecurityquestion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional bool isSuccess = 1;
 * @return {boolean}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.getIssuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage} returns this
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.setIssuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage} returns this
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 securityQuestionNumber = 5;
 * @return {number}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.getSecurityquestionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage} returns this
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.setSecurityquestionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string securityQuestion = 6;
 * @return {string}
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.getSecurityquestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage} returns this
 */
proto.Customer.CustomerToGetSecurityQuestionForVerificationResponseMessage.prototype.setSecurityquestion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    securityquestionnumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    securityanswer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage;
  return proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSecurityquestionnumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityanswer(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSecurityquestionnumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSecurityanswer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional int32 securityQuestionNumber = 1;
 * @return {number}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.getSecurityquestionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.setSecurityquestionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string securityAnswer = 2;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.getSecurityanswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.setSecurityanswer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string customerId = 5;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string countryCode = 6;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage} returns this
 */
proto.Customer.CustomerSecurityQuestionToVerifyRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.ValidateAnswerAndPinRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.ValidateAnswerAndPinRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    securityquestionnumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    securityanswer: jspb.Message.getFieldWithDefault(msg, 6, ""),
    customersixdigitpin: jspb.Message.getFieldWithDefault(msg, 7, 0),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.ValidateAnswerAndPinRequestMessage;
  return proto.Customer.ValidateAnswerAndPinRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.ValidateAnswerAndPinRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSecurityquestionnumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityanswer(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCustomersixdigitpin(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.ValidateAnswerAndPinRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.ValidateAnswerAndPinRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecurityquestionnumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSecurityanswer();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustomersixdigitpin();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string countryCode = 2;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 securityQuestionNumber = 5;
 * @return {number}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.getSecurityquestionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.setSecurityquestionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string securityAnswer = 6;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.getSecurityanswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.setSecurityanswer = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 customerSixDigitPIN = 7;
 * @return {number}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.getCustomersixdigitpin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.setCustomersixdigitpin = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPinRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPinRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.ValidateAnswerAndPasswordRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    customerid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    securityquestionnumber: jspb.Message.getFieldWithDefault(msg, 5, 0),
    securityanswer: jspb.Message.getFieldWithDefault(msg, 6, ""),
    password: jspb.Message.getFieldWithDefault(msg, 7, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 50, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.ValidateAnswerAndPasswordRequestMessage;
  return proto.Customer.ValidateAnswerAndPasswordRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSecurityquestionnumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityanswer(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.ValidateAnswerAndPasswordRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecurityquestionnumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSecurityanswer();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
};


/**
 * optional string customerId = 1;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string countryCode = 2;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 securityQuestionNumber = 5;
 * @return {number}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.getSecurityquestionnumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.setSecurityquestionnumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string securityAnswer = 6;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.getSecurityanswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.setSecurityanswer = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string password = 7;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string languageId = 50;
 * @return {string}
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ValidateAnswerAndPasswordRequestMessage} returns this
 */
proto.Customer.ValidateAnswerAndPasswordRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.ApiAndAppversionRequestMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.ApiAndAppversionRequestMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ApiAndAppversionRequestMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiversionno: jspb.Message.getFieldWithDefault(msg, 20, 0),
    apiversionnoforapp: jspb.Message.getFieldWithDefault(msg, 21, ""),
    languageid: jspb.Message.getFieldWithDefault(msg, 51, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.ApiAndAppversionRequestMessage}
 */
proto.Customer.ApiAndAppversionRequestMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.ApiAndAppversionRequestMessage;
  return proto.Customer.ApiAndAppversionRequestMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.ApiAndAppversionRequestMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.ApiAndAppversionRequestMessage}
 */
proto.Customer.ApiAndAppversionRequestMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 20:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setApiversionno(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiversionnoforapp(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.ApiAndAppversionRequestMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.ApiAndAppversionRequestMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ApiAndAppversionRequestMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiversionno();
  if (f !== 0) {
    writer.writeInt32(
      20,
      f
    );
  }
  f = message.getApiversionnoforapp();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getLanguageid();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
};


/**
 * optional int32 apiVersionNo = 20;
 * @return {number}
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.getApiversionno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.Customer.ApiAndAppversionRequestMessage} returns this
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.setApiversionno = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional string apiVersionNoForApp = 21;
 * @return {string}
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.getApiversionnoforapp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ApiAndAppversionRequestMessage} returns this
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.setApiversionnoforapp = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string languageId = 51;
 * @return {string}
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.getLanguageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ApiAndAppversionRequestMessage} returns this
 */
proto.Customer.ApiAndAppversionRequestMessage.prototype.setLanguageid = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Customer.ApiAndAppversionResponseMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.Customer.ApiAndAppversionResponseMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Customer.ApiAndAppversionResponseMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ApiAndAppversionResponseMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    appupdaterequirementstatus: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Customer.ApiAndAppversionResponseMessage}
 */
proto.Customer.ApiAndAppversionResponseMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Customer.ApiAndAppversionResponseMessage;
  return proto.Customer.ApiAndAppversionResponseMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Customer.ApiAndAppversionResponseMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Customer.ApiAndAppversionResponseMessage}
 */
proto.Customer.ApiAndAppversionResponseMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppupdaterequirementstatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Customer.ApiAndAppversionResponseMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Customer.ApiAndAppversionResponseMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Customer.ApiAndAppversionResponseMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Customer.ApiAndAppversionResponseMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppupdaterequirementstatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string appUpdateRequirementStatus = 2;
 * @return {string}
 */
proto.Customer.ApiAndAppversionResponseMessage.prototype.getAppupdaterequirementstatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Customer.ApiAndAppversionResponseMessage} returns this
 */
proto.Customer.ApiAndAppversionResponseMessage.prototype.setAppupdaterequirementstatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.Customer);
